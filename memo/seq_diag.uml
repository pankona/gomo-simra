
@startuml
hide footbox

participant GomobileApp
participant Engine
participant CurrentScene as Scene
participant Peer

GomobileApp -> Peer : Initialize()
activate Peer
GomobileApp <-- Peer
deactivate Peer

GomobileApp -> Engine : Initialize()
activate Engine
GomobileApp <-- Engine
deactivate Engine

GomobileApp -> Engine : Start()
activate Engine
Engine -> Engine      : changeScene
note over Engine      : currentScene = scene1
Engine -> Scene       : Initialize()
activate Scene
loop as much as needed
note over Scene       : Define Sprite as variables
Scene -> Peer         : AddSprite(Sprite)
activate Peer
note over Peer        : Hold sprites\nas node
Scene <-- Peer
deactivate Peer
end
Engine <-- Scene
deactivate Scene
GomobileApp <-- Engine
deactivate Engine

loop
GomobileApp -> Engine : Update()
activate Engine
Engine -> Scene       : Update() 
activate Scene
note over Scene       : Calculate position\nfor every sprite
Engine <-- Scene
deactivate Scene
Engine -> Peer        : Update()
note over Peer        : Draw for every\nadded sprite
activate Peer
Engine <-- Peer
deactivate Peer
GomobileApp <-- Engine
deactivate Engine
end

Engine <-- Scene      : SceneEndCallback()
activate Engine
Engine -> Engine      : changeScene
note over Engine      : currentScene = scene2
Engine -> Peer        : RemoveAllSprites()
activate Peer
note over Peer        : remove all nodes
Engine <-- Peer
deactivate Peer
Engine -> Scene       : Initialize()
deactivate Engine

GomobileApp -> Engine : Stop()
activate Engine
note over Engine      : currentScene = nil
Engine -> Peer        : Finalize()
activate Peer
note over Peer        : Cleanup if necessary
Engine <-- Peer
deactivate Peer
GomobileApp <-- Engine
deactivate Engine

@enduml
