
@startuml
hide footbox

participant main
participant "Driver\n(interface)" as driver
participant Engine as engine
participant GomobileApp as gomo
participant Peer as peer

main -> engine         : Initialize()
activate engine

engine -> gomo         : Initialize()
activate gomo
engine <-- gomo
deactivate gomo

engine -> peer         : Initialize()
activate peer
engine <-- peer
deactivate peer

main <-- engine
deactivate engine

main -> engine         : Start(driver)
activate engine
engine -> engine       : changedriver
note over engine       : currentdriver = driver1
driver <- engine       : Initialize()
activate driver
loop as much as needed
note over driver       : Define Sprite as variables
driver -> engine       : AddSprite(Sprite)
activate engine
engine -> peer         : AddSprite(Sprite)
activate peer
note over peer         : Hold sprites\nas node
engine <-- peer
deactivate peer
driver <-- engine
deactivate engine
end
driver --> engine
deactivate driver
engine -> gomo         : Start()
activate gomo
engine <-- gomo
deactivate gomo
main <-- engine
deactivate engine

loop
engine <- gomo         : Update()
activate engine
driver <- engine       : Update() 
activate driver
note over driver       : Calculate position\nfor every sprite
driver --> engine
deactivate driver
engine -> peer         : Update()
note over peer         : Draw for every\nadded sprite
activate peer
engine <-- peer
deactivate peer
engine --> gomo
deactivate engine
end

driver -> engine       : driverEnd(Nextdriver)
activate engine
engine -> gomo         : Pause()
activate gomo 
note over gomo         : pause to call Update()
engine <-- gomo 
deactivate gomo

engine -> peer         : RemoveAllSprites()
activate peer
note over peer         : remove all nodes
engine <-- peer
deactivate peer

engine -> engine       : changedriver
note over engine       : currentdriver = driver2

driver <- engine       : Initialize()
activate driver
note over driver       : add sprites as well
driver -> engine
driver --> engine
deactivate driver
engine -> gomo         : Start()
activate gomo
engine <-- gomo
deactivate gomo
driver <-- engine
deactivate engine

driver -> engine       : Stop()
activate engine
note over engine       : currentdriver = nil
engine -> peer         : Finalize()
activate peer
note over peer         : Cleanup if necessary
engine <-- peer
deactivate peer
driver <-- engine
deactivate engine

@enduml
